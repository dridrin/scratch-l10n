{
    "boost.color.any": "any color",
    "boost.color.black": "black",
    "boost.color.blue": "blue",
    "boost.color.green": "green",
    "boost.color.red": "red",
    "boost.color.white": "white",
    "boost.color.yellow": "yellow",
    "boost.getMotorPosition": "motor [MOTOR_REPORTER_ID] position",
    "boost.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "boost.motorDirection.backward": "that way",
    "boost.motorDirection.forward": "this way",
    "boost.motorDirection.reverse": "reverse",
    "boost.motorOff": "turn motor [MOTOR_ID] off",
    "boost.motorOn": "turn motor [MOTOR_ID] on",
    "boost.motorOnFor": "turn motor [MOTOR_ID] for [DURATION] seconds",
    "boost.motorOnForRotation": "turn motor [MOTOR_ID] for [ROTATION] rotations",
    "boost.seeingColor": "seeing [COLOR] brick?",
    "boost.setLightHue": "set light color to [HUE]",
    "boost.setMotorDirection": "set motor [MOTOR_ID] direction [MOTOR_DIRECTION]",
    "boost.setMotorPower": "set motor [MOTOR_ID] speed to [POWER] %",
    "boost.tiltDirection.any": "any",
    "boost.tiltDirection.down": "down",
    "boost.tiltDirection.left": "left",
    "boost.tiltDirection.right": "right",
    "boost.tiltDirection.up": "up",
    "boost.whenColor": "when [COLOR] brick seen",
    "boost.whenTilted": "when tilted [TILT_DIRECTION_ANY]",
    "ev3.beepNote": "beep note [NOTE] for [TIME] secs",
    "ev3.buttonPressed": "button [PORT] pressed?",
    "ev3.getBrightness": "brightness",
    "ev3.getDistance": "distance",
    "ev3.getMotorPosition": "motor [PORT] position",
    "ev3.motorSetPower": "motor [PORT] set power [POWER] %",
    "ev3.motorTurnClockwise": "motor [PORT] turn this way for [TIME] seconds",
    "ev3.motorTurnCounterClockwise": "motor [PORT] turn that way for [TIME] seconds",
    "ev3.whenBrightnessLessThan": "when brightness < [DISTANCE]",
    "ev3.whenButtonPressed": "when button [PORT] pressed",
    "ev3.whenDistanceLessThan": "when distance < [DISTANCE]",
    "gdxfor.getAcceleration": "acceleration [DIRECTION]",
    "gdxfor.getForce": "force",
    "gdxfor.getSpin": "spin speed [DIRECTION]",
    "gdxfor.getTilt": "tilt angle [TILT]",
    "gdxfor.isFreeFalling": "falling?",
    "gdxfor.isTilted": "tilted [TILT]?",
    "gdxfor.pulled": "pulled",
    "gdxfor.pushed": "pushed",
    "gdxfor.shaken": "shaken",
    "gdxfor.startedFalling": "started falling",
    "gdxfor.tiltDirectionMenu.any": "any",
    "gdxfor.tiltDirectionMenu.back": "back",
    "gdxfor.tiltDirectionMenu.front": "front",
    "gdxfor.tiltDirectionMenu.left": "left",
    "gdxfor.tiltDirectionMenu.right": "right",
    "gdxfor.turnedFaceDown": "turned face down",
    "gdxfor.turnedFaceUp": "turned face up",
    "gdxfor.whenForcePushedOrPulled": "when force sensor [PUSH_PULL]",
    "gdxfor.whenGesture": "when [GESTURE]",
    "gdxfor.whenTilted": "when tilted [TILT]",
    "makeymakey.downArrow": "down arrow",
    "makeymakey.downArrowShort": "down",
    "makeymakey.leftArrow": "left arrow",
    "makeymakey.leftArrowShort": "left",
    "makeymakey.rightArrow": "right arrow",
    "makeymakey.rightArrowShort": "right",
    "makeymakey.spaceKey": "space",
    "makeymakey.upArrow": "up arrow",
    "makeymakey.upArrowShort": "up",
    "makeymakey.whenKeyPressed": "when [KEY] key pressed",
    "makeymakey.whenKeysPressedInOrder": "when [SEQUENCE] pressed in order",
    "microbit.buttonsMenu.any": "any",
    "microbit.clearDisplay": "clear display",
    "microbit.defaultTextToDisplay": "Hello!",
    "microbit.displaySymbol": "display [MATRIX]",
    "microbit.displayText": "display text [TEXT]",
    "microbit.gesturesMenu.jumped": "jumped",
    "microbit.gesturesMenu.moved": "moved",
    "microbit.gesturesMenu.shaken": "shaken",
    "microbit.isButtonPressed": "[BTN] button pressed?",
    "microbit.isTilted": "tilted [DIRECTION]?",
    "microbit.pinStateMenu.off": "off",
    "microbit.pinStateMenu.on": "on",
    "microbit.tiltAngle": "tilt angle [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "any",
    "microbit.tiltDirectionMenu.back": "back",
    "microbit.tiltDirectionMenu.front": "front",
    "microbit.tiltDirectionMenu.left": "left",
    "microbit.tiltDirectionMenu.right": "right",
    "microbit.whenButtonPressed": "when [BTN] button pressed",
    "microbit.whenGesture": "when [GESTURE]",
    "microbit.whenPinConnected": "when pin [PIN] connected",
    "microbit.whenTilted": "when tilted [DIRECTION]",
    "music.categoryName": "Music",
    "music.changeTempo": "change tempo by [TEMPO]",
    "music.drumBass": "(2) Bass Drum",
    "music.drumBongo": "(13) Bongo",
    "music.drumCabasa": "(15) Cabasa",
    "music.drumClaves": "(9) Claves",
    "music.drumClosedHiHat": "(6) Closed Hi-Hat",
    "music.drumConga": "(14) Conga",
    "music.drumCowbell": "(11) Cowbell",
    "music.drumCrashCymbal": "(4) Crash Cymbal",
    "music.drumCuica": "(18) Cuica",
    "music.drumGuiro": "(16) Guiro",
    "music.drumHandClap": "(8) Hand Clap",
    "music.drumOpenHiHat": "(5) Open Hi-Hat",
    "music.drumSideStick": "(3) Side Stick",
    "music.drumSnare": "(1) Snare Drum",
    "music.drumTambourine": "(7) Tambourine",
    "music.drumTriangle": "(12) Triangle",
    "music.drumVibraslap": "(17) Vibraslap",
    "music.drumWoodBlock": "(10) Wood Block",
    "music.getTempo": "tempo",
    "music.instrumentBass": "(6) Bass",
    "music.instrumentBassoon": "(14) Bassoon",
    "music.instrumentCello": "(8) Cello",
    "music.instrumentChoir": "(15) Choir",
    "music.instrumentClarinet": "(10) Clarinet",
    "music.instrumentElectricGuitar": "(5) Electric Guitar",
    "music.instrumentElectricPiano": "(2) Electric Piano",
    "music.instrumentFlute": "(12) Flute",
    "music.instrumentGuitar": "(4) Guitar",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Music Box",
    "music.instrumentOrgan": "(3) Organ",
    "music.instrumentPiano": "(1) Piano",
    "music.instrumentPizzicato": "(7) Pizzicato",
    "music.instrumentSaxophone": "(11) Saxophone",
    "music.instrumentSteelDrum": "(18) Steel Drum",
    "music.instrumentSynthLead": "(20) Synth Lead",
    "music.instrumentSynthPad": "(21) Synth Pad",
    "music.instrumentTrombone": "(9) Trombone",
    "music.instrumentVibraphone": "(16) Vibraphone",
    "music.instrumentWoodenFlute": "(13) Wooden Flute",
    "music.midiPlayDrumForBeats": "play drum [DRUM] for [BEATS] beats",
    "music.midiSetInstrument": "set instrument to [INSTRUMENT]",
    "music.playDrumForBeats": "play drum [DRUM] for [BEATS] beats",
    "music.playNoteForBeats": "play note [NOTE] for [BEATS] beats",
    "music.restForBeats": "rest for [BEATS] beats",
    "music.setInstrument": "set instrument to [INSTRUMENT]",
    "music.setTempo": "set tempo to [TEMPO]",
    "pen.categoryName": "Pen",
    "pen.changeColorParam": "change pen [COLOR_PARAM] by [VALUE]",
    "pen.changeHue": "change pen color by [HUE]",
    "pen.changeShade": "change pen shade by [SHADE]",
    "pen.changeSize": "change pen size by [SIZE]",
    "pen.clear": "erase all",
    "pen.colorMenu.brightness": "brightness",
    "pen.colorMenu.color": "color",
    "pen.colorMenu.saturation": "saturation",
    "pen.colorMenu.transparency": "transparency",
    "pen.penDown": "pen down",
    "pen.penUp": "pen up",
    "pen.setColor": "set pen color to [COLOR]",
    "pen.setColorParam": "set pen [COLOR_PARAM] to [VALUE]",
    "pen.setHue": "set pen color to [HUE]",
    "pen.setShade": "set pen shade to [SHADE]",
    "pen.setSize": "set pen size to [SIZE]",
    "pen.stamp": "stamp",
    "speech.defaultWhenIHearValue": "let''s go",
    "speech.extensionName": "Speech to Text",
    "speech.listenAndWait": "listen and wait",
    "speech.speechReporter": "speech",
    "speech.whenIHear": "when I hear [PHRASE]",
    "text2speech.alto": "alto",
    "text2speech.categoryName": "Text to Speech",
    "text2speech.defaultTextToSpeak": "hello",
    "text2speech.giant": "giant",
    "text2speech.kitten": "kitten",
    "text2speech.setLanguageBlock": "set language to [LANGUAGE]",
    "text2speech.setVoiceBlock": "set voice to [VOICE]",
    "text2speech.speakAndWaitBlock": "speak [WORDS]",
    "text2speech.squeak": "squeak",
    "text2speech.tenor": "tenor",
    "translate.categoryName": "Translate",
    "translate.defaultTextToTranslate": "hello",
    "translate.translateBlock": "translate [WORDS] to [LANGUAGE]",
    "translate.viewerLanguage": "language",
    "videoSensing.categoryName": "Video Sensing",
    "videoSensing.direction": "direction",
    "videoSensing.motion": "motion",
    "videoSensing.off": "off",
    "videoSensing.on": "on",
    "videoSensing.onFlipped": "on flipped",
    "videoSensing.setVideoTransparency": "set video transparency to [TRANSPARENCY]",
    "videoSensing.sprite": "sprite",
    "videoSensing.stage": "stage",
    "videoSensing.videoOn": "video [ATTRIBUTE] on [SUBJECT]",
    "videoSensing.videoToggle": "turn video [VIDEO_STATE]",
    "videoSensing.whenMotionGreaterThan": "when video motion > [REFERENCE]",
    "wedo2.getDistance": "distance",
    "wedo2.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "wedo2.isTilted": "tilted [TILT_DIRECTION_ANY]?",
    "wedo2.motorDirection.backward": "that way",
    "wedo2.motorDirection.forward": "this way",
    "wedo2.motorDirection.reverse": "reverse",
    "wedo2.motorId.a": "motor A",
    "wedo2.motorId.all": "all motors",
    "wedo2.motorId.b": "motor B",
    "wedo2.motorId.default": "motor",
    "wedo2.motorOff": "turn [MOTOR_ID] off",
    "wedo2.motorOn": "turn [MOTOR_ID] on",
    "wedo2.motorOnFor": "turn [MOTOR_ID] on for [DURATION] seconds",
    "wedo2.playNoteFor": "play note [NOTE] for [DURATION] seconds",
    "wedo2.setLightHue": "set light color to [HUE]",
    "wedo2.setMotorDirection": "set [MOTOR_ID] direction to [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "set [MOTOR_ID] power to [POWER]",
    "wedo2.tiltDirection.any": "any",
    "wedo2.tiltDirection.down": "down",
    "wedo2.tiltDirection.left": "left",
    "wedo2.tiltDirection.right": "right",
    "wedo2.tiltDirection.up": "up",
    "wedo2.whenDistance": "when distance [OP] [REFERENCE]",
    "wedo2.whenTilted": "when tilted [TILT_DIRECTION_ANY]",
    "dridrin.category.label": "DriDrin",
    "dridrin.info.description": "vehicles are big toys",
    "dridrin.setAppIcon": "set [COSTUME] to icon",
    "dridrin.registerApp": "register SDL app to [WS_URL]",
    "dridrin.isReady": "SDL app is ready",
    "dridrin.unregisterApp": "unregister SDL app",
    "dridrin.setTemplate": "set [TEMPLATE] to template",
    "dridrin.isTemplate": "template is [TEMPLATE]",
    "dridrin.setTitle": "set [TITLE] to Title",
    "dridrin.setTitle.title.defaultValue": "title",
    "dridrin.setTextField": "set [TEXT] to [TEXT_FIELD]",
    "dridrin.setTextField.text.defaultValue": "text",
    "dridrin.setGraphic": "set [COSTUME] to [GRAPHIC]",
    "dridrin.event_onVehicleData": "when [VEHICLE_DATA] changed",
    "dridrin.event_onButtonPress": "when [BUTTON_NAME] button Pressed",
    "dridrin.addSoftButton": "add [BUTTON_NAME] label:[BUTTON_LABEL] image:[COSTUME]",
    "dridrin.addSoftButton.lavel.defaultValue": "label",
    "dridrin.event_onSoftButtonPress": "when [BUTTON_NAME] Pressed",
    "dridrin.removeSoftButton": "remove [BUTTON_NAME]",
    "dridrin.say": "say [MESSAGE]",
    "dridrin.say.message.defaultValue": "Hello",
    "dridrin.playSound": "play [SOUND]",
    "dridrin.hmiLevelChanged": "'when HMI Level changed",
    "dridrin.hmiLevel": "HMI level",
    "dridrin.menu.templates.nonMedia": "non media",
    "dridrin.menu.templates.largeGraphicOnly": "large graphic only",
    "dridrin.menu.templates.largeGraphicWithSoftbuttons": "large graphic with softbuttons",
    "dridrin.menu.templates.media": "media",
    "dridrin.menu.templates.default": "default",
    "dridrin.menu.templates.graphicWithText": "graphic with text",
    "dridrin.menu.templates.textWithGraphic": "text with graphic",
    "dridrin.menu.templates.textbuttonsOnly": "textbuttons only",
    "dridrin.menu.templates.graphicWithTextbuttons": "graphic with textbuttons",
    "dridrin.menu.templates.textbuttonsWithGraphic": "textbuttons with graphic",
    "dridrin.menu.templates.doubleGraphicWithSoftbuttons": "double graphics with softbuttons",
    "dridrin.menu.templates.tilesOnly": "tiles only",
    "dridrin.menu.softButtons.1": "softbutton 1",
    "dridrin.menu.softButtons.2": "softbutton 2",
    "dridrin.menu.softButtons.3": "softbutton 3",
    "dridrin.menu.softButtons.4": "softbutton 4",
    "dridrin.menu.softButtons.5": "softbutton 5",
    "dridrin.menu.softButtons.6": "softbutton 6",
    "dridrin.menu.softButtons.7": "softbutton 7",
    "dridrin.menu.softButtons.8": "softbutton 8",
    "dridrin.menu.textFields.1": "textfield 1",
    "dridrin.menu.textFields.2": "textfield 2",
    "dridrin.menu.textFields.3": "textfield 3",
    "dridrin.menu.textFields.4": "textfield 4",
    "dridrin.menu.graphics.primary": "primary graphic",
    "dridrin.menu.graphics.secondary": "secondary graphic",
    "dridrin.menu.vehicleData.accPedalPosition": "acc pedal position",
    "dridrin.menu.vehicleData.airbagStatus": "Airbag Status",
    "dridrin.menu.vehicleData.beltStatus": "belt status",
    "dridrin.menu.vehicleData.bodyInformation": "body information",
    "dridrin.menu.vehicleData.cloudAppVehicleID": "cloud app vehicle ID",
    "dridrin.menu.vehicleData.clusterModeStatus": "cluster mode status",
    "dridrin.menu.vehicleData.deviceStatus": "device status",
    "dridrin.menu.vehicleData.driverBraking": "driver braking",
    "dridrin.menu.vehicleData.eCallInfo": "eCall info",
    "dridrin.menu.vehicleData.electronicParkBrakeStatus": "electronic park brake status",
    "dridrin.menu.vehicleData.emergencyEvent": "emergency event",
    "dridrin.menu.vehicleData.engineOilLife": "engine oil life",
    "dridrin.menu.vehicleData.engineTorque": "engine torque",
    "dridrin.menu.vehicleData.externalTemperature": "external temperature",
    "dridrin.menu.vehicleData.fuelLevel": "fuel level",
    "dridrin.menu.vehicleData.fuelLevelState": "fuel level state",
    "dridrin.menu.vehicleData.fuelRange": "fuel range",
    "dridrin.menu.vehicleData.gps": "GPS",
    "dridrin.menu.vehicleData.headLampStatus": "head lamp status",
    "dridrin.menu.vehicleData.instantFuelConsumption": "instant fuel consumption",
    "dridrin.menu.vehicleData.myKey": "my key",
    "dridrin.menu.vehicleData.odometer": "odometer",
    "dridrin.menu.vehicleData.prndl": "PRNDL",
    "dridrin.menu.vehicleData.rpm": "RPM",
    "dridrin.menu.vehicleData.speed": "speed",
    "dridrin.menu.vehicleData.steeringWheelAngle": "steering wheel angle",
    "dridrin.menu.vehicleData.tirePressure": "tire pressure",
    "dridrin.menu.vehicleData.vin": "VIN",
    "dridrin.menu.vehicleData.turnSignal": "turn signal",
    "dridrin.menu.vehicleData.wiperStatus": "wiper status",
    "dridrin.menu.buttonName.ok": "ok",
    "dridrin.menu.buttonName.playPause": "play pause",
    "dridrin.menu.buttonName.seekleft": "seekleft",
    "dridrin.menu.buttonName.seekright": "seekright",
    "dridrin.menu.buttonName.tuneup":"tuneup",
    "dridrin.menu.buttonName.tunedown": "tunedown",
    "dridrin.menu.buttonName.acMax": "AC max",
    "dridrin.menu.buttonName.ac": "AC", 
    "dridrin.menu.buttonName.recirculate": "recirculate",
    "dridrin.menu.buttonName.fanUp": "fan up",
    "dridrin.menu.buttonName.fanDown": "fan down",
    "dridrin.menu.buttonName.tempUp": "temp up",
    "dridrin.menu.buttonName.tempDown": "temp down",
    "dridrin.menu.buttonName.defrostMax": "defrost max",
    "dridrin.menu.buttonName.defrost": "defrost",
    "dridrin.menu.buttonName.defrostRear": "defrost rear",
    "dridrin.menu.buttonName.upperVent": "upper vent",
    "dridrin.menu.buttonName.lowerVent": "lower vent",
    "dridrin.menu.buttonName.volumeUp": "volume up",
    "dridrin.menu.buttonName.volumeDown": "volume down",
    "dridrin.menu.buttonName.eject": "eject",
    "dridrin.menu.buttonName.source": "source",
    "dridrin.menu.buttonName.shuffle": "shuffle",
    "dridrin.menu.buttonName.repeat": "repeat",
    "dridrin.menu.costumes.optional":"none",
    "dridrin.vehicleData.accPedalPosition": "acc pedal position",
    "dridrin.vehicleData.airbagStatus": "Airbag Status",
    "dridrin.vehicleData.beltStatus": "belt status",
    "dridrin.vehicleData.bodyInformation": "body information",
    "dridrin.vehicleData.cloudAppVehicleID": "cloud app vehicle ID",
    "dridrin.vehicleData.clusterModeStatus": "cluster mode status",
    "dridrin.vehicleData.deviceStatus": "device status",
    "dridrin.vehicleData.driverBraking": "driver braking",
    "dridrin.vehicleData.eCallInfo": "eCall info",
    "dridrin.vehicleData.electronicParkBrakeStatus": "electronic park brake status",
    "dridrin.vehicleData.emergencyEvent": "emergency event",
    "dridrin.vehicleData.engineOilLife": "engine oil life",
    "dridrin.vehicleData.engineTorque": "engine torque",
    "dridrin.vehicleData.externalTemperature": "external temperature",
    "dridrin.vehicleData.fuelLevel": "fuel level",
    "dridrin.vehicleData.fuelLevelState": "fuel level state",
    "dridrin.vehicleData.fuelRange": "fuel range",
    "dridrin.vehicleData.gps": "GPS",
    "dridrin.vehicleData.headLampStatus": "head lamp status",
    "dridrin.vehicleData.instantFuelConsumption": "instant fuel consumption",
    "dridrin.vehicleData.myKey": "my key",
    "dridrin.vehicleData.odometer": "odometer",
    "dridrin.vehicleData.prndl": "PRNDL",
    "dridrin.vehicleData.rpm": "RPM",
    "dridrin.vehicleData.speed": "speed",
    "dridrin.vehicleData.steeringWheelAngle": "steering wheel angle",
    "dridrin.vehicleData.tirePressure": "tire pressure",
    "dridrin.vehicleData.vin": "VIN",
    "dridrin.vehicleData.turnSignal": "turn signal",
    "dridrin.vehicleData.wiperStatus": "wiper status",
    "dridrin.vehicleData.bodyInformation.parkBrakeActive": "park brake active",
    "dridrin.vehicleData.gps.latitudeDegrees": "latitude degrees",
    "dridrin.vehicleData.gps.longitudeDegrees": "longitude degrees",
    "dridrin.vehicleData.gps.altitude": "altitude",
    "dridrin.vehicleData.gps.heading": "heading",
    "dridrin.vehicleData.headLampStatus.lowBeamsOn": "low beams on",
    "dridrin.vehicleData.headLampStatus.highBeamsOn": "high beams on",
    "dridrin.defaultProject.costumes.car": "car",
    "dridrin.defaultProject.costumes.dridrin": "DriDrin",
    "dridrin.defaultProject.sounds.carHorn": "car horn",
    "dridrin.defaultProject.sounds.engine": "engine",
    "dridrin.defaultProject.sounds.skid": "skid"
}